{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Os dados, até a data do presente estudo, estão no https://opendatasus.saude.gov.br/dataset/bd-srag-2020\n",
    "#### O presente arquivo é de terça, 23 de junho. Atenção: a última barra no gráfico por semana é menor, pois a semana é incompleta! Note também que o crescimento é diferente por cidades.\n",
    "#### Disclaimer/Aviso Legal: Este notebook tem um fim única e exclusivamente didático, para alunos da FATEC, como uma introdução à Análise de Dados Públicos. Desse modo, está excluída a garantia ou responsabilidade de qualquer tipo, por exemplo, de precisão, confiabilidade, completude e atualidade das informações."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "low_memory=False\n",
    "%matplotlib inline\n",
    "pd.options.display.max_columns = 80\n",
    "pd.options.display.max_rows = 90"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "c:\\users\\usuario\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\IPython\\core\\interactiveshell.py:3072: DtypeWarning: Columns (18,59,61,62,63,103,105,117,119,126,128,129,130,132) have mixed types.Specify dtype option on import or set low_memory=False.\n",
      "  interactivity=interactivity, compiler=compiler, result=result)\n"
     ]
    }
   ],
   "source": [
    "filename = r'C:\\Users\\usuario\\INFLUD-07-07-2020.csv'\n",
    "df = pd.read_csv(filename, delimiter=';', \n",
    "                 encoding='ISO-8859-1',\n",
    "                 error_bad_lines=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "18 CS_ETINIA\n",
      "59 DT_VAC_MAE\n",
      "61 DT_DOSEUNI\n",
      "62 DT_1_DOSE\n",
      "63 DT_2_DOSE\n",
      "103 FLUASU_OUT\n",
      "105 FLUBLI_OUT\n",
      "119 CLASSI_OUT\n",
      "126 PAIS_VGM\n",
      "128 LO_PS_VGM\n",
      "129 DT_VGM\n",
      "130 DT_RT_VGM\n",
      "132 PAC_COCBO\n"
     ]
    }
   ],
   "source": [
    "for k in (18,59,61,62,63,103,105,119,126,128,129,130,132): print (k, df.columns[k])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(393979, 134)"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 393979 entries, 0 to 393978\n",
      "Columns: 134 entries, DT_NOTIFIC to PAC_DSCBO\n",
      "dtypes: float64(76), int64(10), object(48)\n",
      "memory usage: 402.8+ MB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(0, 'DT_NOTIFIC')\n",
      "(1, 'SEM_NOT')\n",
      "(2, 'DT_SIN_PRI')\n",
      "(3, 'SEM_PRI')\n",
      "(4, 'SG_UF_NOT')\n",
      "(5, 'ID_REGIONA')\n",
      "(6, 'CO_REGIONA')\n",
      "(7, 'ID_MUNICIP')\n",
      "(8, 'CO_MUN_NOT')\n",
      "(9, 'ID_UNIDADE')\n",
      "(10, 'CO_UNI_NOT')\n",
      "(11, 'CS_SEXO')\n",
      "(12, 'DT_NASC')\n",
      "(13, 'NU_IDADE_N')\n",
      "(14, 'TP_IDADE')\n",
      "(15, 'COD_IDADE')\n",
      "(16, 'CS_GESTANT')\n",
      "(17, 'CS_RACA')\n",
      "(18, 'CS_ETINIA')\n",
      "(19, 'CS_ESCOL_N')\n",
      "(20, 'ID_PAIS')\n",
      "(21, 'CO_PAIS')\n",
      "(22, 'SG_UF')\n",
      "(23, 'ID_RG_RESI')\n",
      "(24, 'CO_RG_RESI')\n",
      "(25, 'ID_MN_RESI')\n",
      "(26, 'CO_MUN_RES')\n",
      "(27, 'CS_ZONA')\n",
      "(28, 'SURTO_SG')\n",
      "(29, 'NOSOCOMIAL')\n",
      "(30, 'AVE_SUINO')\n",
      "(31, 'FEBRE')\n",
      "(32, 'TOSSE')\n",
      "(33, 'GARGANTA')\n",
      "(34, 'DISPNEIA')\n",
      "(35, 'DESC_RESP')\n",
      "(36, 'SATURACAO')\n",
      "(37, 'DIARREIA')\n",
      "(38, 'VOMITO')\n",
      "(39, 'OUTRO_SIN')\n",
      "(40, 'OUTRO_DES')\n",
      "(41, 'PUERPERA')\n",
      "(42, 'CARDIOPATI')\n",
      "(43, 'HEMATOLOGI')\n",
      "(44, 'SIND_DOWN')\n",
      "(45, 'HEPATICA')\n",
      "(46, 'ASMA')\n",
      "(47, 'DIABETES')\n",
      "(48, 'NEUROLOGIC')\n",
      "(49, 'PNEUMOPATI')\n",
      "(50, 'IMUNODEPRE')\n",
      "(51, 'RENAL')\n",
      "(52, 'OBESIDADE')\n",
      "(53, 'OBES_IMC')\n",
      "(54, 'OUT_MORBI')\n",
      "(55, 'MORB_DESC')\n",
      "(56, 'VACINA')\n",
      "(57, 'DT_UT_DOSE')\n",
      "(58, 'MAE_VAC')\n",
      "(59, 'DT_VAC_MAE')\n",
      "(60, 'M_AMAMENTA')\n",
      "(61, 'DT_DOSEUNI')\n",
      "(62, 'DT_1_DOSE')\n",
      "(63, 'DT_2_DOSE')\n",
      "(64, 'ANTIVIRAL')\n",
      "(65, 'TP_ANTIVIR')\n",
      "(66, 'OUT_ANTIV')\n",
      "(67, 'DT_ANTIVIR')\n",
      "(68, 'HOSPITAL')\n",
      "(69, 'DT_INTERNA')\n",
      "(70, 'SG_UF_INTE')\n",
      "(71, 'ID_RG_INTE')\n",
      "(72, 'CO_RG_INTE')\n",
      "(73, 'ID_MN_INTE')\n",
      "(74, 'CO_MU_INTE')\n",
      "(75, 'UTI')\n",
      "(76, 'DT_ENTUTI')\n",
      "(77, 'DT_SAIDUTI')\n",
      "(78, 'SUPORT_VEN')\n",
      "(79, 'RAIOX_RES')\n",
      "(80, 'RAIOX_OUT')\n",
      "(81, 'DT_RAIOX')\n",
      "(82, 'AMOSTRA')\n",
      "(83, 'DT_COLETA')\n",
      "(84, 'TP_AMOSTRA')\n",
      "(85, 'OUT_AMOST')\n",
      "(86, 'IF_RESUL')\n",
      "(87, 'DT_IF')\n",
      "(88, 'POS_IF_FLU')\n",
      "(89, 'TP_FLU_IF')\n",
      "(90, 'POS_IF_OUT')\n",
      "(91, 'IF_VSR')\n",
      "(92, 'IF_PARA1')\n",
      "(93, 'IF_PARA2')\n",
      "(94, 'IF_PARA3')\n",
      "(95, 'IF_ADENO')\n",
      "(96, 'IF_OUTRO')\n",
      "(97, 'DS_IF_OUT')\n",
      "(98, 'PCR_RESUL')\n",
      "(99, 'DT_PCR')\n",
      "(100, 'POS_PCRFLU')\n",
      "(101, 'TP_FLU_PCR')\n",
      "(102, 'PCR_FLUASU')\n",
      "(103, 'FLUASU_OUT')\n",
      "(104, 'PCR_FLUBLI')\n",
      "(105, 'FLUBLI_OUT')\n",
      "(106, 'POS_PCROUT')\n",
      "(107, 'PCR_VSR')\n",
      "(108, 'PCR_PARA1')\n",
      "(109, 'PCR_PARA2')\n",
      "(110, 'PCR_PARA3')\n",
      "(111, 'PCR_PARA4')\n",
      "(112, 'PCR_ADENO')\n",
      "(113, 'PCR_METAP')\n",
      "(114, 'PCR_BOCA')\n",
      "(115, 'PCR_RINO')\n",
      "(116, 'PCR_OUTRO')\n",
      "(117, 'DS_PCR_OUT')\n",
      "(118, 'CLASSI_FIN')\n",
      "(119, 'CLASSI_OUT')\n",
      "(120, 'CRITERIO')\n",
      "(121, 'EVOLUCAO')\n",
      "(122, 'DT_EVOLUCA')\n",
      "(123, 'DT_ENCERRA')\n",
      "(124, 'DT_DIGITA')\n",
      "(125, 'HISTO_VGM')\n",
      "(126, 'PAIS_VGM')\n",
      "(127, 'CO_PS_VGM')\n",
      "(128, 'LO_PS_VGM')\n",
      "(129, 'DT_VGM')\n",
      "(130, 'DT_RT_VGM')\n",
      "(131, 'PCR_SARS2')\n",
      "(132, 'PAC_COCBO')\n",
      "(133, 'PAC_DSCBO')\n"
     ]
    }
   ],
   "source": [
    "for par in enumerate(df.columns): print (par)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Tabelas de microdados usam números, faço a correspondência desses números com seus significados\n",
    "troca_raça = {1:'Branca', 2:'Preta', 3:'Amarela',\n",
    "              4:'Parda', 5:'Indígena', 9:'Ignorado'}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "df.loc[(df.CS_RACA.isnull()), 'CS_RACA'] = 9\n",
    "df['CS_RACA'] = df['CS_RACA'].apply(lambda x: troca_raça[x])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>DT_NOTIFIC</th>\n",
       "      <th>SEM_NOT</th>\n",
       "      <th>DT_SIN_PRI</th>\n",
       "      <th>SEM_PRI</th>\n",
       "      <th>SG_UF_NOT</th>\n",
       "      <th>ID_REGIONA</th>\n",
       "      <th>CO_REGIONA</th>\n",
       "      <th>ID_MUNICIP</th>\n",
       "      <th>CO_MUN_NOT</th>\n",
       "      <th>ID_UNIDADE</th>\n",
       "      <th>CO_UNI_NOT</th>\n",
       "      <th>CS_SEXO</th>\n",
       "      <th>DT_NASC</th>\n",
       "      <th>NU_IDADE_N</th>\n",
       "      <th>TP_IDADE</th>\n",
       "      <th>COD_IDADE</th>\n",
       "      <th>CS_GESTANT</th>\n",
       "      <th>CS_RACA</th>\n",
       "      <th>CS_ETINIA</th>\n",
       "      <th>CS_ESCOL_N</th>\n",
       "      <th>ID_PAIS</th>\n",
       "      <th>CO_PAIS</th>\n",
       "      <th>SG_UF</th>\n",
       "      <th>ID_RG_RESI</th>\n",
       "      <th>CO_RG_RESI</th>\n",
       "      <th>ID_MN_RESI</th>\n",
       "      <th>CO_MUN_RES</th>\n",
       "      <th>CS_ZONA</th>\n",
       "      <th>SURTO_SG</th>\n",
       "      <th>NOSOCOMIAL</th>\n",
       "      <th>AVE_SUINO</th>\n",
       "      <th>FEBRE</th>\n",
       "      <th>TOSSE</th>\n",
       "      <th>GARGANTA</th>\n",
       "      <th>DISPNEIA</th>\n",
       "      <th>DESC_RESP</th>\n",
       "      <th>SATURACAO</th>\n",
       "      <th>DIARREIA</th>\n",
       "      <th>VOMITO</th>\n",
       "      <th>OUTRO_SIN</th>\n",
       "      <th>...</th>\n",
       "      <th>IF_PARA3</th>\n",
       "      <th>IF_ADENO</th>\n",
       "      <th>IF_OUTRO</th>\n",
       "      <th>DS_IF_OUT</th>\n",
       "      <th>PCR_RESUL</th>\n",
       "      <th>DT_PCR</th>\n",
       "      <th>POS_PCRFLU</th>\n",
       "      <th>TP_FLU_PCR</th>\n",
       "      <th>PCR_FLUASU</th>\n",
       "      <th>FLUASU_OUT</th>\n",
       "      <th>PCR_FLUBLI</th>\n",
       "      <th>FLUBLI_OUT</th>\n",
       "      <th>POS_PCROUT</th>\n",
       "      <th>PCR_VSR</th>\n",
       "      <th>PCR_PARA1</th>\n",
       "      <th>PCR_PARA2</th>\n",
       "      <th>PCR_PARA3</th>\n",
       "      <th>PCR_PARA4</th>\n",
       "      <th>PCR_ADENO</th>\n",
       "      <th>PCR_METAP</th>\n",
       "      <th>PCR_BOCA</th>\n",
       "      <th>PCR_RINO</th>\n",
       "      <th>PCR_OUTRO</th>\n",
       "      <th>DS_PCR_OUT</th>\n",
       "      <th>CLASSI_FIN</th>\n",
       "      <th>CLASSI_OUT</th>\n",
       "      <th>CRITERIO</th>\n",
       "      <th>EVOLUCAO</th>\n",
       "      <th>DT_EVOLUCA</th>\n",
       "      <th>DT_ENCERRA</th>\n",
       "      <th>DT_DIGITA</th>\n",
       "      <th>HISTO_VGM</th>\n",
       "      <th>PAIS_VGM</th>\n",
       "      <th>CO_PS_VGM</th>\n",
       "      <th>LO_PS_VGM</th>\n",
       "      <th>DT_VGM</th>\n",
       "      <th>DT_RT_VGM</th>\n",
       "      <th>PCR_SARS2</th>\n",
       "      <th>PAC_COCBO</th>\n",
       "      <th>PAC_DSCBO</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>132500</th>\n",
       "      <td>13/05/2020</td>\n",
       "      <td>20</td>\n",
       "      <td>11/05/2020</td>\n",
       "      <td>20</td>\n",
       "      <td>SP</td>\n",
       "      <td>GVE I CAPITAL</td>\n",
       "      <td>1331.0</td>\n",
       "      <td>SAO PAULO</td>\n",
       "      <td>355030</td>\n",
       "      <td>INST DO CANCER ARNALDO VIEIRA DE CARVALHO</td>\n",
       "      <td>2080125</td>\n",
       "      <td>M</td>\n",
       "      <td>04/09/1952</td>\n",
       "      <td>67</td>\n",
       "      <td>3</td>\n",
       "      <td>3067</td>\n",
       "      <td>6</td>\n",
       "      <td>Ignorado</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>BRASIL</td>\n",
       "      <td>1</td>\n",
       "      <td>SP</td>\n",
       "      <td>GVE I CAPITAL</td>\n",
       "      <td>1331.0</td>\n",
       "      <td>SAO PAULO</td>\n",
       "      <td>355030.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2.0</td>\n",
       "      <td>18/05/2020</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>20/05/2020</td>\n",
       "      <td>25/05/2020</td>\n",
       "      <td>13/05/2020</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>365547</th>\n",
       "      <td>22/05/2020</td>\n",
       "      <td>21</td>\n",
       "      <td>19/05/2020</td>\n",
       "      <td>21</td>\n",
       "      <td>PE</td>\n",
       "      <td>001</td>\n",
       "      <td>1497.0</td>\n",
       "      <td>RECIFE</td>\n",
       "      <td>261160</td>\n",
       "      <td>HOSPITAL DA RESTAURACAO</td>\n",
       "      <td>655</td>\n",
       "      <td>M</td>\n",
       "      <td>05/04/1938</td>\n",
       "      <td>82</td>\n",
       "      <td>3</td>\n",
       "      <td>3082</td>\n",
       "      <td>6</td>\n",
       "      <td>Ignorado</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>BRASIL</td>\n",
       "      <td>1</td>\n",
       "      <td>PE</td>\n",
       "      <td>005</td>\n",
       "      <td>1500.0</td>\n",
       "      <td>LAJEDO</td>\n",
       "      <td>260880.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>01/07/2020</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>344635</th>\n",
       "      <td>19/06/2020</td>\n",
       "      <td>25</td>\n",
       "      <td>19/06/2020</td>\n",
       "      <td>25</td>\n",
       "      <td>SP</td>\n",
       "      <td>GVE VIII MOGI DAS CRUZES</td>\n",
       "      <td>1333.0</td>\n",
       "      <td>GUARULHOS</td>\n",
       "      <td>351880</td>\n",
       "      <td>UPA PAULISTA</td>\n",
       "      <td>9242295</td>\n",
       "      <td>M</td>\n",
       "      <td>15/12/1982</td>\n",
       "      <td>37</td>\n",
       "      <td>3</td>\n",
       "      <td>3037</td>\n",
       "      <td>6</td>\n",
       "      <td>Parda</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3.0</td>\n",
       "      <td>BRASIL</td>\n",
       "      <td>1</td>\n",
       "      <td>SP</td>\n",
       "      <td>GVE VIII MOGI DAS CRUZES</td>\n",
       "      <td>1333.0</td>\n",
       "      <td>GUARULHOS</td>\n",
       "      <td>351880.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>28/06/2020</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>310943</th>\n",
       "      <td>10/06/2020</td>\n",
       "      <td>24</td>\n",
       "      <td>08/06/2020</td>\n",
       "      <td>24</td>\n",
       "      <td>MS</td>\n",
       "      <td>EX ARS DE CAMPO GRANDE</td>\n",
       "      <td>1975.0</td>\n",
       "      <td>CAMPO GRANDE</td>\n",
       "      <td>500270</td>\n",
       "      <td>HOSPITAL CASSEMS UNIDADE DE CAMPO GRANDE</td>\n",
       "      <td>9081496</td>\n",
       "      <td>F</td>\n",
       "      <td>30/04/1977</td>\n",
       "      <td>43</td>\n",
       "      <td>3</td>\n",
       "      <td>3043</td>\n",
       "      <td>5</td>\n",
       "      <td>Branca</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3.0</td>\n",
       "      <td>BRASIL</td>\n",
       "      <td>1</td>\n",
       "      <td>MS</td>\n",
       "      <td>EX ARS DE CAMPO GRANDE</td>\n",
       "      <td>1975.0</td>\n",
       "      <td>CAMPO GRANDE</td>\n",
       "      <td>500270.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2.0</td>\n",
       "      <td>14/06/2020</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>10/06/2020</td>\n",
       "      <td>06/07/2020</td>\n",
       "      <td>22/06/2020</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>97863</th>\n",
       "      <td>27/04/2020</td>\n",
       "      <td>18</td>\n",
       "      <td>24/04/2020</td>\n",
       "      <td>17</td>\n",
       "      <td>SP</td>\n",
       "      <td>GVE I CAPITAL</td>\n",
       "      <td>1331.0</td>\n",
       "      <td>SAO PAULO</td>\n",
       "      <td>355030</td>\n",
       "      <td>HOSPITAL GERAL DE VILA NOVA CACHOEIRINHA SAO P...</td>\n",
       "      <td>2688573</td>\n",
       "      <td>M</td>\n",
       "      <td>30/08/1969</td>\n",
       "      <td>50</td>\n",
       "      <td>3</td>\n",
       "      <td>3050</td>\n",
       "      <td>6</td>\n",
       "      <td>Branca</td>\n",
       "      <td>NaN</td>\n",
       "      <td>9.0</td>\n",
       "      <td>BRASIL</td>\n",
       "      <td>1</td>\n",
       "      <td>SP</td>\n",
       "      <td>GVE I CAPITAL</td>\n",
       "      <td>1331.0</td>\n",
       "      <td>SAO PAULO</td>\n",
       "      <td>355030.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>30/04/2020</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>05/05/2020</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>142686</th>\n",
       "      <td>15/05/2020</td>\n",
       "      <td>20</td>\n",
       "      <td>12/05/2020</td>\n",
       "      <td>20</td>\n",
       "      <td>SP</td>\n",
       "      <td>GVE XXI PRESIDENTE PRUDENTE</td>\n",
       "      <td>1346.0</td>\n",
       "      <td>PRESIDENTE PRUDENTE</td>\n",
       "      <td>354140</td>\n",
       "      <td>HOSPITAL DOMINGOS LEONARDO CERAVOLO PRESIDENTE...</td>\n",
       "      <td>2755130</td>\n",
       "      <td>F</td>\n",
       "      <td>13/08/1981</td>\n",
       "      <td>38</td>\n",
       "      <td>3</td>\n",
       "      <td>3038</td>\n",
       "      <td>5</td>\n",
       "      <td>Branca</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3.0</td>\n",
       "      <td>BRASIL</td>\n",
       "      <td>1</td>\n",
       "      <td>SP</td>\n",
       "      <td>GVE XXI PRESIDENTE PRUDENTE</td>\n",
       "      <td>1346.0</td>\n",
       "      <td>PRESIDENTE PRUDENTE</td>\n",
       "      <td>354140.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2.0</td>\n",
       "      <td>17/05/2020</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>16/05/2020</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>81449</th>\n",
       "      <td>29/04/2020</td>\n",
       "      <td>18</td>\n",
       "      <td>23/04/2020</td>\n",
       "      <td>17</td>\n",
       "      <td>PR</td>\n",
       "      <td>17RS LONDRINA</td>\n",
       "      <td>1371.0</td>\n",
       "      <td>LONDRINA</td>\n",
       "      <td>411370</td>\n",
       "      <td>HOSPITAL UNIVERSITARIO REGIONAL DO NORTE DO PA...</td>\n",
       "      <td>2781859</td>\n",
       "      <td>F</td>\n",
       "      <td>06/03/1942</td>\n",
       "      <td>78</td>\n",
       "      <td>3</td>\n",
       "      <td>3078</td>\n",
       "      <td>5</td>\n",
       "      <td>Ignorado</td>\n",
       "      <td>NaN</td>\n",
       "      <td>9.0</td>\n",
       "      <td>BRASIL</td>\n",
       "      <td>1</td>\n",
       "      <td>PR</td>\n",
       "      <td>17RS LONDRINA</td>\n",
       "      <td>1371.0</td>\n",
       "      <td>LUPIONOPOLIS</td>\n",
       "      <td>411380.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>10/05/2020</td>\n",
       "      <td>25/05/2020</td>\n",
       "      <td>29/04/2020</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>187827</th>\n",
       "      <td>19/05/2020</td>\n",
       "      <td>21</td>\n",
       "      <td>19/05/2020</td>\n",
       "      <td>21</td>\n",
       "      <td>MT</td>\n",
       "      <td>CUIABA</td>\n",
       "      <td>1578.0</td>\n",
       "      <td>CUIABA</td>\n",
       "      <td>510340</td>\n",
       "      <td>LABORATORIO CARLOS CHAGAS UNIDADE HOSPITAL FEMINA</td>\n",
       "      <td>6278035</td>\n",
       "      <td>F</td>\n",
       "      <td>13/08/1972</td>\n",
       "      <td>47</td>\n",
       "      <td>3</td>\n",
       "      <td>3047</td>\n",
       "      <td>5</td>\n",
       "      <td>Ignorado</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4.0</td>\n",
       "      <td>BRASIL</td>\n",
       "      <td>1</td>\n",
       "      <td>MT</td>\n",
       "      <td>CUIABA</td>\n",
       "      <td>1578.0</td>\n",
       "      <td>CUIABA</td>\n",
       "      <td>510340.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>23/05/2020</td>\n",
       "      <td>2.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>25/05/2020</td>\n",
       "      <td>25/05/2020</td>\n",
       "      <td>27/05/2020</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>147342</th>\n",
       "      <td>08/05/2020</td>\n",
       "      <td>19</td>\n",
       "      <td>03/05/2020</td>\n",
       "      <td>19</td>\n",
       "      <td>PI</td>\n",
       "      <td>4 GRS TERESINA</td>\n",
       "      <td>1883.0</td>\n",
       "      <td>TERESINA</td>\n",
       "      <td>221100</td>\n",
       "      <td>UNIDADE DE SAUDE MATADOURO</td>\n",
       "      <td>2323427</td>\n",
       "      <td>F</td>\n",
       "      <td>07/10/1951</td>\n",
       "      <td>68</td>\n",
       "      <td>3</td>\n",
       "      <td>3068</td>\n",
       "      <td>5</td>\n",
       "      <td>Ignorado</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>BRASIL</td>\n",
       "      <td>1</td>\n",
       "      <td>PI</td>\n",
       "      <td>4 GRS TERESINA</td>\n",
       "      <td>1883.0</td>\n",
       "      <td>TERESINA</td>\n",
       "      <td>221100.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>11/05/2020</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>18/05/2020</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>93008</th>\n",
       "      <td>27/04/2020</td>\n",
       "      <td>18</td>\n",
       "      <td>24/04/2020</td>\n",
       "      <td>17</td>\n",
       "      <td>RS</td>\n",
       "      <td>007 CRS</td>\n",
       "      <td>1596.0</td>\n",
       "      <td>BAGE</td>\n",
       "      <td>430160</td>\n",
       "      <td>SANTA CASA DE CARIDADE DE BAGE</td>\n",
       "      <td>2261987</td>\n",
       "      <td>F</td>\n",
       "      <td>05/04/1943</td>\n",
       "      <td>77</td>\n",
       "      <td>3</td>\n",
       "      <td>3077</td>\n",
       "      <td>6</td>\n",
       "      <td>Branca</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2.0</td>\n",
       "      <td>BRASIL</td>\n",
       "      <td>1</td>\n",
       "      <td>RS</td>\n",
       "      <td>007 CRS</td>\n",
       "      <td>1596.0</td>\n",
       "      <td>BAGE</td>\n",
       "      <td>430160.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2.0</td>\n",
       "      <td>03/05/2020</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>01/05/2020</td>\n",
       "      <td>15/06/2020</td>\n",
       "      <td>04/05/2020</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>10 rows × 134 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        DT_NOTIFIC  SEM_NOT  DT_SIN_PRI  SEM_PRI SG_UF_NOT  \\\n",
       "132500  13/05/2020       20  11/05/2020       20        SP   \n",
       "365547  22/05/2020       21  19/05/2020       21        PE   \n",
       "344635  19/06/2020       25  19/06/2020       25        SP   \n",
       "310943  10/06/2020       24  08/06/2020       24        MS   \n",
       "97863   27/04/2020       18  24/04/2020       17        SP   \n",
       "142686  15/05/2020       20  12/05/2020       20        SP   \n",
       "81449   29/04/2020       18  23/04/2020       17        PR   \n",
       "187827  19/05/2020       21  19/05/2020       21        MT   \n",
       "147342  08/05/2020       19  03/05/2020       19        PI   \n",
       "93008   27/04/2020       18  24/04/2020       17        RS   \n",
       "\n",
       "                         ID_REGIONA  CO_REGIONA           ID_MUNICIP  \\\n",
       "132500                GVE I CAPITAL      1331.0            SAO PAULO   \n",
       "365547                          001      1497.0               RECIFE   \n",
       "344635     GVE VIII MOGI DAS CRUZES      1333.0            GUARULHOS   \n",
       "310943       EX ARS DE CAMPO GRANDE      1975.0         CAMPO GRANDE   \n",
       "97863                 GVE I CAPITAL      1331.0            SAO PAULO   \n",
       "142686  GVE XXI PRESIDENTE PRUDENTE      1346.0  PRESIDENTE PRUDENTE   \n",
       "81449                 17RS LONDRINA      1371.0             LONDRINA   \n",
       "187827                       CUIABA      1578.0               CUIABA   \n",
       "147342               4 GRS TERESINA      1883.0             TERESINA   \n",
       "93008                       007 CRS      1596.0                 BAGE   \n",
       "\n",
       "        CO_MUN_NOT                                         ID_UNIDADE  \\\n",
       "132500      355030          INST DO CANCER ARNALDO VIEIRA DE CARVALHO   \n",
       "365547      261160                            HOSPITAL DA RESTAURACAO   \n",
       "344635      351880                                       UPA PAULISTA   \n",
       "310943      500270           HOSPITAL CASSEMS UNIDADE DE CAMPO GRANDE   \n",
       "97863       355030  HOSPITAL GERAL DE VILA NOVA CACHOEIRINHA SAO P...   \n",
       "142686      354140  HOSPITAL DOMINGOS LEONARDO CERAVOLO PRESIDENTE...   \n",
       "81449       411370  HOSPITAL UNIVERSITARIO REGIONAL DO NORTE DO PA...   \n",
       "187827      510340  LABORATORIO CARLOS CHAGAS UNIDADE HOSPITAL FEMINA   \n",
       "147342      221100                         UNIDADE DE SAUDE MATADOURO   \n",
       "93008       430160                     SANTA CASA DE CARIDADE DE BAGE   \n",
       "\n",
       "        CO_UNI_NOT CS_SEXO     DT_NASC  NU_IDADE_N  TP_IDADE  COD_IDADE  \\\n",
       "132500     2080125       M  04/09/1952          67         3       3067   \n",
       "365547         655       M  05/04/1938          82         3       3082   \n",
       "344635     9242295       M  15/12/1982          37         3       3037   \n",
       "310943     9081496       F  30/04/1977          43         3       3043   \n",
       "97863      2688573       M  30/08/1969          50         3       3050   \n",
       "142686     2755130       F  13/08/1981          38         3       3038   \n",
       "81449      2781859       F  06/03/1942          78         3       3078   \n",
       "187827     6278035       F  13/08/1972          47         3       3047   \n",
       "147342     2323427       F  07/10/1951          68         3       3068   \n",
       "93008      2261987       F  05/04/1943          77         3       3077   \n",
       "\n",
       "        CS_GESTANT   CS_RACA CS_ETINIA  CS_ESCOL_N ID_PAIS  CO_PAIS SG_UF  \\\n",
       "132500           6  Ignorado       NaN         NaN  BRASIL        1    SP   \n",
       "365547           6  Ignorado       NaN         1.0  BRASIL        1    PE   \n",
       "344635           6     Parda       NaN         3.0  BRASIL        1    SP   \n",
       "310943           5    Branca       NaN         3.0  BRASIL        1    MS   \n",
       "97863            6    Branca       NaN         9.0  BRASIL        1    SP   \n",
       "142686           5    Branca       NaN         3.0  BRASIL        1    SP   \n",
       "81449            5  Ignorado       NaN         9.0  BRASIL        1    PR   \n",
       "187827           5  Ignorado       NaN         4.0  BRASIL        1    MT   \n",
       "147342           5  Ignorado       NaN         NaN  BRASIL        1    PI   \n",
       "93008            6    Branca       NaN         2.0  BRASIL        1    RS   \n",
       "\n",
       "                         ID_RG_RESI  CO_RG_RESI           ID_MN_RESI  \\\n",
       "132500                GVE I CAPITAL      1331.0            SAO PAULO   \n",
       "365547                          005      1500.0               LAJEDO   \n",
       "344635     GVE VIII MOGI DAS CRUZES      1333.0            GUARULHOS   \n",
       "310943       EX ARS DE CAMPO GRANDE      1975.0         CAMPO GRANDE   \n",
       "97863                 GVE I CAPITAL      1331.0            SAO PAULO   \n",
       "142686  GVE XXI PRESIDENTE PRUDENTE      1346.0  PRESIDENTE PRUDENTE   \n",
       "81449                 17RS LONDRINA      1371.0         LUPIONOPOLIS   \n",
       "187827                       CUIABA      1578.0               CUIABA   \n",
       "147342               4 GRS TERESINA      1883.0             TERESINA   \n",
       "93008                       007 CRS      1596.0                 BAGE   \n",
       "\n",
       "        CO_MUN_RES  CS_ZONA  SURTO_SG  NOSOCOMIAL  AVE_SUINO  FEBRE  TOSSE  \\\n",
       "132500    355030.0      1.0       NaN         NaN        NaN    NaN    NaN   \n",
       "365547    260880.0      1.0       1.0         2.0        2.0    1.0    1.0   \n",
       "344635    351880.0      1.0       2.0         2.0        2.0    2.0    2.0   \n",
       "310943    500270.0      1.0       2.0         2.0        2.0    2.0    1.0   \n",
       "97863     355030.0      1.0       9.0         2.0        9.0    NaN    1.0   \n",
       "142686    354140.0      1.0       2.0         2.0        2.0    1.0    1.0   \n",
       "81449     411380.0      1.0       2.0         2.0        2.0    1.0    1.0   \n",
       "187827    510340.0      1.0       2.0         2.0        2.0    2.0    1.0   \n",
       "147342    221100.0      1.0       2.0         2.0        2.0    1.0    1.0   \n",
       "93008     430160.0      1.0       1.0         2.0        2.0    1.0    1.0   \n",
       "\n",
       "        GARGANTA  DISPNEIA  DESC_RESP  SATURACAO  DIARREIA  VOMITO  OUTRO_SIN  \\\n",
       "132500       NaN       NaN        NaN        NaN       NaN     NaN        1.0   \n",
       "365547       1.0       1.0        1.0        1.0       NaN     NaN        NaN   \n",
       "344635       2.0       2.0        2.0        2.0       2.0     2.0        2.0   \n",
       "310943       1.0       1.0        1.0        2.0       2.0     2.0        2.0   \n",
       "97863        1.0       1.0        NaN        NaN       NaN     NaN        NaN   \n",
       "142686       2.0       1.0        2.0        1.0       2.0     2.0        1.0   \n",
       "81449        2.0       1.0        2.0        1.0       2.0     2.0        2.0   \n",
       "187827       2.0       2.0        2.0        2.0       2.0     2.0        1.0   \n",
       "147342       2.0       2.0        2.0        1.0       2.0     2.0        2.0   \n",
       "93008        NaN       1.0        1.0        1.0       2.0     2.0        2.0   \n",
       "\n",
       "        ... IF_PARA3  IF_ADENO  IF_OUTRO  DS_IF_OUT  PCR_RESUL      DT_PCR  \\\n",
       "132500  ...      NaN       NaN       NaN        NaN        2.0  18/05/2020   \n",
       "365547  ...      NaN       NaN       NaN        NaN        NaN         NaN   \n",
       "344635  ...      NaN       NaN       NaN        NaN        5.0         NaN   \n",
       "310943  ...      NaN       NaN       NaN        NaN        2.0  14/06/2020   \n",
       "97863   ...      NaN       NaN       NaN        NaN        1.0  30/04/2020   \n",
       "142686  ...      NaN       NaN       NaN        NaN        2.0  17/05/2020   \n",
       "81449   ...      NaN       NaN       NaN        NaN        NaN         NaN   \n",
       "187827  ...      NaN       NaN       NaN        NaN        1.0  23/05/2020   \n",
       "147342  ...      NaN       NaN       NaN        NaN        1.0  11/05/2020   \n",
       "93008   ...      NaN       NaN       NaN        NaN        2.0  03/05/2020   \n",
       "\n",
       "        POS_PCRFLU  TP_FLU_PCR  PCR_FLUASU  FLUASU_OUT  PCR_FLUBLI  \\\n",
       "132500         NaN         NaN         NaN         NaN         NaN   \n",
       "365547         NaN         NaN         NaN         NaN         NaN   \n",
       "344635         NaN         NaN         NaN         NaN         NaN   \n",
       "310943         NaN         NaN         NaN         NaN         NaN   \n",
       "97863          NaN         NaN         NaN         NaN         NaN   \n",
       "142686         NaN         NaN         NaN         NaN         NaN   \n",
       "81449          NaN         NaN         NaN         NaN         NaN   \n",
       "187827         2.0         NaN         NaN         NaN         NaN   \n",
       "147342         NaN         NaN         NaN         NaN         NaN   \n",
       "93008          NaN         NaN         NaN         NaN         NaN   \n",
       "\n",
       "        FLUBLI_OUT  POS_PCROUT  PCR_VSR  PCR_PARA1 PCR_PARA2  PCR_PARA3  \\\n",
       "132500         NaN         NaN      NaN        NaN       NaN        NaN   \n",
       "365547         NaN         NaN      NaN        NaN       NaN        NaN   \n",
       "344635         NaN         NaN      NaN        NaN       NaN        NaN   \n",
       "310943         NaN         NaN      NaN        NaN       NaN        NaN   \n",
       "97863          NaN         1.0      NaN        NaN       NaN        NaN   \n",
       "142686         NaN         NaN      NaN        NaN       NaN        NaN   \n",
       "81449          NaN         NaN      NaN        NaN       NaN        NaN   \n",
       "187827         NaN         1.0      NaN        NaN       NaN        NaN   \n",
       "147342         NaN         1.0      NaN        NaN       NaN        NaN   \n",
       "93008          NaN         NaN      NaN        NaN       NaN        NaN   \n",
       "\n",
       "       PCR_PARA4  PCR_ADENO PCR_METAP  PCR_BOCA PCR_RINO PCR_OUTRO DS_PCR_OUT  \\\n",
       "132500       NaN        NaN       NaN       NaN      NaN       NaN        NaN   \n",
       "365547       NaN        NaN       NaN       NaN      NaN       NaN        NaN   \n",
       "344635       NaN        NaN       NaN       NaN      NaN       NaN        NaN   \n",
       "310943       NaN        NaN       NaN       NaN      NaN       NaN        NaN   \n",
       "97863        NaN        NaN       NaN       NaN      NaN       NaN        NaN   \n",
       "142686       NaN        NaN       NaN       NaN      NaN       NaN        NaN   \n",
       "81449        NaN        NaN       NaN       NaN      NaN       NaN        NaN   \n",
       "187827       NaN        NaN       NaN       NaN      NaN       NaN        NaN   \n",
       "147342       NaN        NaN       NaN       NaN      NaN       NaN        NaN   \n",
       "93008        NaN        NaN       NaN       NaN      NaN       NaN        NaN   \n",
       "\n",
       "        CLASSI_FIN  CLASSI_OUT CRITERIO EVOLUCAO  DT_EVOLUCA  DT_ENCERRA  \\\n",
       "132500         4.0         NaN      1.0      1.0  20/05/2020  25/05/2020   \n",
       "365547         NaN         NaN      NaN      NaN         NaN         NaN   \n",
       "344635         NaN         NaN      NaN      NaN         NaN         NaN   \n",
       "310943         4.0         NaN      1.0      1.0  10/06/2020  06/07/2020   \n",
       "97863          5.0         NaN      1.0      NaN         NaN         NaN   \n",
       "142686         4.0         NaN      1.0      NaN         NaN         NaN   \n",
       "81449          4.0         NaN      3.0      2.0  10/05/2020  25/05/2020   \n",
       "187827         5.0         NaN      1.0      1.0  25/05/2020  25/05/2020   \n",
       "147342         5.0         NaN      1.0      NaN         NaN         NaN   \n",
       "93008          4.0         NaN      1.0      2.0  01/05/2020  15/06/2020   \n",
       "\n",
       "         DT_DIGITA HISTO_VGM  PAIS_VGM CO_PS_VGM  LO_PS_VGM  DT_VGM DT_RT_VGM  \\\n",
       "132500  13/05/2020         0       NaN       NaN        NaN     NaN       NaN   \n",
       "365547  01/07/2020         2       NaN       NaN        NaN     NaN       NaN   \n",
       "344635  28/06/2020         2       NaN       NaN        NaN     NaN       NaN   \n",
       "310943  22/06/2020         0       NaN       NaN        NaN     NaN       NaN   \n",
       "97863   05/05/2020         2       NaN       NaN        NaN     NaN       NaN   \n",
       "142686  16/05/2020         2       NaN       NaN        NaN     NaN       NaN   \n",
       "81449   29/04/2020         2       NaN       NaN        NaN     NaN       NaN   \n",
       "187827  27/05/2020         2       NaN       NaN        NaN     NaN       NaN   \n",
       "147342  18/05/2020         2       NaN       NaN        NaN     NaN       NaN   \n",
       "93008   04/05/2020         2       NaN       NaN        NaN     NaN       NaN   \n",
       "\n",
       "       PCR_SARS2  PAC_COCBO  PAC_DSCBO  \n",
       "132500       NaN        NaN        NaN  \n",
       "365547       NaN        NaN        NaN  \n",
       "344635       NaN        NaN        NaN  \n",
       "310943       NaN        NaN        NaN  \n",
       "97863        1.0        NaN        NaN  \n",
       "142686       NaN        NaN        NaN  \n",
       "81449        NaN        NaN        NaN  \n",
       "187827       1.0        NaN        NaN  \n",
       "147342       1.0        NaN        NaN  \n",
       "93008        NaN        NaN        NaN  \n",
       "\n",
       "[10 rows x 134 columns]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.sample(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'Mortes')"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "df.query('CLASSI_FIN == 5 and NU_IDADE_N').groupby('NU_IDADE_N').size().head(50).plot(kind='bar', figsize=(10,5), color = \"GREEN\" , title = 'Mortes por corona vírus por idade').set_ylabel('Mortes', fontsize =14)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'Mortes')"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "df.query('CLASSI_FIN == 5 and CS_RACA').groupby('CS_RACA').size().head(50).plot(kind='bar', figsize=(10,5), color = \"GREEN\" , title = 'Mortes por corona vírus por raça').set_ylabel('Mortes', fontsize =14)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'Mortes')"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "df.query('CLASSI_FIN == 5 and CS_RACA and CS_ESCOL_N == 0').groupby('CS_RACA').size().head(50).plot(kind='bar', figsize=(10,5), color = \"GREEN\" , title = 'Mortes por corona vírus, por escolaridade').set_ylabel('Mortes', fontsize =14)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
